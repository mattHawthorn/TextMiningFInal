4614 NA archive faq part _num_ modified _num_ _num_ _num_ subject _num_ writing widget float resource float resources portable size larger size xtpointer pointer float xaw scrollbar float resources handled subject _num_ memory leak _num_ _num_ xtdestroywidget unofficial fix _num_ _num_ _num_ destroy destroy _num_ thu jul _num_ _num_ _num_ _num_ _num_ lib xt destroy thu jul _num_ _num_ _num_ _num_ _num_ _num_ _num_ _num_ _num_ xconsortium destroy _num_ _num_ _num_ _num_ _num_ _num_ _num_ swick exp unofficial patches revisions _num_ _num_ copyright _num_ _num_ digital equipment corporation maynard massachusetts _num_ _num_ int _num_ destroyrec dr app destroylist app destroycount dr dispatchlevel dispatchlevel widget dr widget app destroycount bcopy char dr _num_ char dr app destroycount sizeof destroyrec xtphase _num_ destroy dr _num_ _num_ int _num_ destroyrec dr app destroycount xtphase _num_ destroy result calls xtdestroywidget app destroylist reallocated dr app destroylist dr dispatchlevel dispatchlevel widget dr widget app destroycount bcopy char dr _num_ char dr app destroycount sizeof destroyrec xtphase _num_ destroy donna converse _email_ subject _num_ callbacks guaranteed called order registered books demonstrate current implementation xt call callback procedures order registered specification guarantee sequence supplemental authoritative documents asente swick volume order undefined callback list manipulated widget application xt guarantee order execution general callback procedures thought operating independently depend side effects callbacks operating seqence needed single callback registered explicitly call functions _num_ _num_ _email_ subject _num_ xtdestroywidget destroy widget xtdestroywidget operates passes order avoid leaving dangling data structures function call marks widget destroyed program returns event loop subject _num_ query user synchronously xt code trivial callback clear flow control calls askuser block answer set valid values answer code drops callback back event processing loop void quit widget xtpointer client xtpointer call int answer answer askuser quit retyes answer answer askuser positive retyes answer exit _num_ realistic create file overwrite accomplished entering event processing loop waiting user answers question answer returned calling function function askuser motif replaced widget set specific code create sort dialog box displaying question string buttons cancel equivalents int askuser string widget char string int answer retnone marker widget dialog cache carry arg args _num_ int _num_ xtappcontext context _num_ xtsetarg args xmnmessagestring xmstringcreateltor string xmstringdefaultcharset xtsetarg args xmndialogstyle xmdialogapplicationmodal dialog xmcreatequestiondialog xtparent string args xtaddcallback dialog xmnokcallback response answer xtaddcallback dialog xmncancelcallback response answer xtaddcallback dialog xmnhelpcallback response answer xtmanagechild dialog context xtwidgettoapplicationcontext answer retnone xtapppending context xtappprocessevent context xtimall xtdestroywidget dialog blow dialog box shell return answer dialog supports buttons set call function tickled user variable answer set user finally selects choices void response client call widget xtpointer client xtpointer call int answer int client xmanycallbackstruct reason xmanycallbackstruct call switch reason reason case xmcrok answer retyes define break case xmcrcancel answer retno break case xmcrhelp answer rethelp break default return code unwraps back point answer needed continues dan heller _email_ code dan's _num_ contrib widgetwrap library _num_ _num_ subject _num_ determine existing widget widget id widget users _num_ xtname function work widgets widget objects _num_ simple bit code note depends widget's internal data structures necessarily portable future versions xt including _num_ include _num_ corep include _num_ xresource string xtname widget widget widget work widget objects return xrmnametostring widget core xrmname _num_ _num_ modified suggestion larry rogers _email_ _num_ _num_ subject _num_ baddrawable error drawing xtwindow widget order window xlib graphics xt based program canvas xtcreatemanagedwidget widgetclass drawing area window xtwindow canvas window widget xdrawline window produces error window widget created part realization widget window id null window create error describe call xtrealizewidget attempting window widget note window created xtrealizewidget call server mapped wait expose event window drawing subject _num_ badmatch error calling xgetimage badmatch error occur rectangle edge screen catch error deal steps avoid error _num_ make pixmap size rectangle capture _num_ clear pixmap background xfillrectangle _num_ xcopyarea copy window pixmap _num_ noexpose event copy clean xgetimage grab image pixmap _num_ graphicsexpose events copy clean width height members graphicsexpose event structures parts pixmap good _num_ rid pixmap takes lot memory _num_ _num_ oliver jones _email_ subject _num_ application run number programs offer modes run straight character mode easiest application determine running display attempt open connection server display xopendisplay displayname display stuff curses displayname string command line display convention char null case xopendisplay display set superior simply checking existence display command line argument checking display set environment adequate _num_ _num_ subject _num_ make busy cursor application computing call xdefinecursor window application easiest thing create single inputonly window large largest screen make child toplevel window clipped window affect application big largest screen case user enlarges window busy moves virtual desktop substitute toplevel top widget similar code work xlib applications top window unsigned long valuemask xsetwindowattributes attributes ignore device events busy cursor displayed valuemask cwdontpropagate cwcursor attributes donotpropagatemask keypressmask keyreleasemask buttonpressmask buttonreleasemask pointermotionmask attributes cursor xcreatefontcursor xtdisplay toplevel xcwatch window big display screen clipped parent window worry resizing xcreatewindow xtdisplay toplevel xtwindow toplevel _num_ _num_ _num_ _num_ unsigned int _num_ _num_ inputonly copyfromparent valuemask attributes maximum size replaced real size screen avoid servers problems windows larger _num_ busy cursor map raise window back normal unmap automatically extra mouse events depending precisely window manager works similar effect keystrokes addition note xaw widgets support xtncursor resource temporarily reset change cursor blocking pointer events andrew wason _email_ dan heller _email_ _email_ _num_ _num_ _num_ _num_ subject _num_ fork hanging parent program based application spawns unix processes continue run closed typically vanish children terminated children inherit parent open connection display fork immediately child process close connectionnumber xtdisplay widget close file descriptor display information exec exit parent alternatively exec'ing make call file descriptor closed exec void fcntl connectionnumber xdisplay fsetfd _num_ janet anstett _email_ gordon freedman _email_ _num_ _num_ greg holmberg _email_ _num_ _num_ subject _num_ make xt xlib calls signal handler xlib xt mutual exclusion protecting critical sections signal handler makes call wrong time function calling executing leave library inconsistent state note ansi standard points behavior signal handler undefined signal handler calls function signal problem specific xlib xt posix specification mentions functions called safely assumed functions called xlib xt functions work problem setting flag interrupt handler checking work procedure timer event previously added note article journal _num_ _num_ o'reilly volume _num_ error pete ware _email_ donna converse _email_ _num_ _num_ subject _num_ xlib sequence lost errors errors issue xlib requests xlib error handler make calls generate requests xt xlib signal handler case subject _num_ xt program handle socket pipe file input common write xt program accept input user connection file descriptor operates efficiently blocking connection file descriptor solution xtappaddinput open file descriptor xtappaddinput register input handler input handler called time file descriptor requiring program's attention write input handler xt callback work quickly returns important blocking system calls input handlers input handlers read file descriptor input handler write handle exception conditions careful register input handler read disk file find function called input pending xtappaddinput working supposed input handler called file descriptor ready read data read disk file unlike pipe socket ready read spin back beginning read data read result function called time xtappmainloop type interaction expecting add line beginning function test data ioctl fd fionread _num_ _num_ return called frequently application effectively busy wait xtappaddinput setting timer timer procedure checking file input courtesy dan heller _email_ _num_ _num_ _email_ _num_ _num_ ollie jones _email_ _num_ _num_ subject _num_ simulate button press release event widget xsendevent setting window field event xt order match widget receive event sending events application xtdispatchevent efficient xsendevent avoid round trip server depending widget written call action procedures order effects courtesy mark horstman _email_ _num_ _num_ subject _num_ run simple program thewindow xcreatesimplewindow thedisplay rootwindow sizehints sizehints sizehints width sizehints height borderwidth blackpixel thedisplay thescreen whitepixel thedisplay thescreen xselectinput thedisplay thewindow exposuremask buttonpressmask buttonreleasemask xmapwindow thedisplay thewindow xdrawline thedisplay thewindow thegc _num_ _num_ _num_ _num_ map window drawing window ready drawn appears screen application receives expose event drawing generally code programs code window created mapped xnextevent thedisplay theevent switch theevent type case expose expose events redraw xdrawline thedisplay thewindow thegc _num_ _num_ _num_ _num_ break note problem xlib implementations set default graphics context correct foreground background colors program previously include code thegcvalues foreground blackpixel thedisplay thescreen thegcvalues background whitepixel thedisplay thescreen thegc xcreategc thedisplay thewindow gcforeground gcbackground thegcvalues note code blackpixel whitepixel avoid assuming _num_ black _num_ white vice versa relationship pixels _num_ _num_ colors black white implementation dependent reversed correspond black white note blackpixel whitepixel wrong thing finished program ignores user's preference foreground background note run situation xt based program draw xtwindow realized appeared subject _num_ difference screen screen screen xlib structure includes information monitors virtual monitors single display supports server support independent screens numbered unix _num_ unix _num_ unix _num_ screen screennumber digit _num_ _num_ _num_ thought index array screens display connection macros obtain information screen application running typically forms takes screen takes display screennumber xt based programs typically xtscreen widget determine screen application running single screen part confusion arise fact macros return characteristics screen display names xdisplaywidth xdisplayheight subject _num_ _num_ motif xview _num_ _num_ _num_ header files compatible motif _num_ header files usable inside extern definition string intrinsic conflict libg string class worked projects wwl set classes jean daniel fekete wrap toolkit widgets anonymous ftp export lcs mit contrib wwl _num_ tar _num_ _num_ lri lri fr _num_ _num_ pub wwl _num_ tar works building set classes parallel class tree widgets interviews toolkit obtainable anonymous ftp interviews stanford interviews box glue model similar tex constructing user interfaces supports multiple user interfaces sample applications include wysiwig document editor doc macdraw drawing program idraw interface builder ibuild things class library written rome air force base strategic air command freeware archive sites motif public domain library defines class wrappers motif _num_ adds application class initializing integrates wcl xbae widget set work developed ronald van loon _email_ based set bindings university lowell graphics research laboratory current sources decuac dec _num_ _num_ pub _num_ motif _num_ jul _num_ tar source code examples doug young's object oriented programming osf motif isbn _num_ _num_ _num_ _num_ include widget wrappers include set classes encapsulates higher level facilities commonly needed motif xt based applications check export ftp contrib young tar rogue wave offers view programmers motif info _num_ _num_ _num_ _num_ _num_ _num_ _num_ _num_ product called commonview glockenspiel ireland apparently based toolkit multiple window systems including pm windows motif xv sold qualix _num_ _num_ _num_ fax _num_ implements interface gil files sun's openwindows developers guide _num_ produces xview wrapper classes uit set classes embedding xview toolkit intended sun's openwindows developers guide _num_ builder tool sources export mit au uit tar version _num_ released _num_ _num_ _num_ objectcenter saber reasonable alternative parcplace's solbourne's object interface douglas rand _email_ george wu _email_ _num_ _num_ subject _num_ obtain alternate language bindings versions clx lisp bindings part _num_ core source distributions version clx _num_ tape _num_ _num_ version _num_ _num_ _num_ _num_ export lcs mit contrib clx _num_ tar saic ada _num_ bindings anonymous ftp pub stars rosslyn unisys _num_ _num_ ada study team sponsored nasa jsc apparently working bindings information _email_ gnu smalltalk beta native smalltalk binding called stix _email_ beginning stages documentation sparse smalltalk code sources pub gnu smalltalk _num_ _num_ tar prep ai mit _num_ _num_ ugle unit _num_ _num_ prolog bindings called xwip written ted kim ucla supported part darpa anonymous ftp export lcs mit contrib xwip tar ftp cs ucla pub xwip tar prolog language bindings depend quintus type foreign function interface prolog developer work quintus sicstus prolog inquiries _email_ _num_ _num_ scheme bindings xlib osf motif xaw part elk distribution version _num_ export obsoletes version _num_ contrib tape scm bolt accessory aubrey jaffer's scm scheme interpreter interface xlib motif openlook ftp altdorf ai mit archive scm xscm _num_ tar nexus yorku ca pub scheme xscm _num_ tar ada bindings motif explicitly eventually made jet propulsion laboratories normal electronic means advance information obtained _email_ respond time permits adamotif complete binding motif ada language common systems based part saic unisys bindings includes uil ada translator info systems engineering research corporation _num_ _num_ ada serc _email_ mit consortium involved producing ada bindings maintains partial listing people involved ada information donna converse _email_ subject _num_ xgetwindowattributes window's background pixel pixmap set background pixel pixmap window read clients reason client create pixmap set background pixmap window free pixmap window background pixmap destroyed window background pixel pixmap xcleararea clear region background color xgetimage read back pixel action alters contents window suffers race conditions exposures courtesy dave lemke ncd stuart marks sun note applies border pixel pixmap mis feature protocol server free manipulate pixel pixmap requiring server original pixel pixmap potentially lot space saved courtesy jim fulton mit consortium subject _num_ create transparent window completely transparent window easy inputonly window order create window transparent choices shape extension released _num_ _num_ offers easy make rectangular windows set shape window fit areas window nontransparent servers support extension machine specific method implementing transparent windows servers overlay plane supported hardware note notion transparent color index generally portable solution large number tiny windows makes operating application unit difficult final answer transparent window satisfied overlay application window information draw separate bitplanes colors properly der mouse _email_ _num_ _num_ journal _num_ _num_ complete answer including code samples option subject _num_ gxxor produce mathematically correct color values gxxor expect drawing black background black produce white drawing operation work rgb values colormap indices color resulting colormap index points undefined visually random filled servers black white _num_ _num_ _num_ _num_ programs taking advantage mathematical coincidence break combining colors gxxor allocating number color cells filling chosen pre computed values gxxor simply switch colors shortcut setting background color gc graphics context _num_ foreground color draws red result blue draws blue result red foreground xor colormap indices red blue chris flatters _email_ ken whaley _email_ _num_ _num_ subject _num_ color allocate show black make _num_ bits _num_ red green blue fields xcolor structure scaled _num_ _num_ full blast forget scale _num_ _num_ color xalloccolor function perform correctly resulting color black paul asente _email_ _num_ _num_ subject _num_ program standard colormap image processing program xgetrgbcolormap standard colormap work xgetrgbcolormap property xargbdefaultmap create standard colormap returns exists xstdcmap order create standard colormap _num_ _num_ der mouse _email_ subject _num_ pixmap copy screen show garbage initial contents pixmaps undefined means servers allocate memory leave garbage clear pixmap xfillrectangle function gxcopy foreground pixel color background _num_ pixmap mask courtesy dave lemke ncd stuart marks sun subject _num_ check window id valid program id window remote display check window exists asynchronous guarantee window exist time id time event window manipulated send event checking install error handler catch badwindow errors window longer exists scheme work rare occasion original window destroyed id reallocated window courtesy ken lee _email_ _num_ _num_ subject _num_ applications draw window server assigns ids windows resources server assigns bits client application id manipulate resource server resource gcs private color cells shared problem face disseminate window id multiple applications simple handle solves problem applications running machines application create specially named property root window put window id application retrieves property draw window note scheme works iff instance application running scheme subject limitations mentioned question window ids remote displays note coordinate higher level cooperation applications note processes share window server connection process child close connection server open connection courtesy phil karlton _email_ _num_ _num_ subject _num_ program work tvtwm swm number applications including xwd xwininfo xsetroot handle virtual root window tvtwm swm typically return wrong child root general solution add code application rootwindow dpy screen function getvroot description root window virtual root arguments display screen returns root window client include _num_ xatom window getvroot dpy scr display dpy int scr window rootreturn parentreturn children unsigned int numchildren window root rootwindow dpy scr atom swmvroot int swmvroot xinternatom dpy swmvroot false xquerytree dpy root rootreturn parentreturn children numchildren _num_ numchildren atom actualtype int actualformat long nitems bytesafter window newroot null xgetwindowproperty dpy children swmvroot _num_ _num_ false xawindow actualtype actualformat nitems bytesafter unsigned char newroot success newroot root newroot break return root courtesy david elliott _email_ similar code ssetroot version xsetroot distributed tvtwm _num_ _num_ header file andreas stolcke icsi export lcs mit contrib vroot functions similarly providing macros rootwindow defaultrootwindow code include header file run properly presence virtual desktop subject _num_ window resized user resizing window window manager window managers pay attention size hints application places window guarantee window manager listen setting minimum maximum size hints target size hope _num_ _num_ subject _num_ window foreground times antisocial application constantly raise tracking visibilitynotify events overlapped imagine conflict programs running window top stack make window override redirect means temporarily assuming window management duties window infrequently short periods time popup menus short parameter setting windows der mouse _email_ _num_ _num_ subject _num_ make text bitmaps blink easy depend sort extension existent arrange blinking redrawing contents periodically playing games colormap changing color contents _email_ der mouse _num_ _num_ subject _num_ double click xlib users xt support translation manager notification double clicking good double click xlib protocol provide support double clicks client side timeouts single click action defer taking event server timeouts means system dependent code unixish implementations xconnectionnumber file descriptor connection select similar note user interface references suggest double click extend action single click case interface execute action compromise check timestamp event determine single click action double click action _email_ der mouse _num_ _num_ subject _num_ render rotated text xlib intentionally provide sophisticated graphics capabilities leaving server extensions clients side graphics libraries choice stay core protocol render text pixmap read back xgetimage rotate hand matrices put back server xputimage specifically _num_ create bitmap write text _num_ create xybitmap image xgetimage _num_ create xybitmap image _num_ big handle transformation _num_ _num_ _num_ cos theta sin theta sin theta cos theta _num_ render _num_ note careful implement lose bits algorithm based shear transformations fact high level server extensions graphics packages permit rendering rotated text display postscript pex phigs gks capable arbitrary rotation fonts found printer addition access server install font create font consists letters rotated predefined angle application figure placement glyph courtesy der mouse _email_ eric taylor _email_ ken lee _email_ _num_ _num_ liam quin _email_ _num_ _num_ interviews ui toolkit contrib software support rendering rotated fonts source code brian smith _email_ _num_ _num_ possibility hershey fonts stroke rendered converting xdrawline requests _email_ _num_ _num_ xrotfont program alan richardson _email_ posted _group_ july _num_ _num_ paints rotated font implementing method outline hershey font xvertext package alan richardson _email_ set functions facilitate writing text angle version _num_ recently released _group_ _group_ _num_ _num_ export contrib xvertext _num_ shar o'reilly's resource volume _num_ includes information hp modifications fonts server provide rotated scaled text subject _num_ registry reserve names places toolkit applications protocol define string names context conflicts components things mit consortium maintains registry names domains orgainization names selection names selection targets resource types application classes class extension record types list _num_ _num_ directory mit doc registry _num_ tape sending send docs registry xstuff mail server register names served questions send _email_ include postal address confirmation _num_ _num_ condensed asente swick appendix david lewis faq _email_ faqs ma'am joe friday
