3382 NA number requests code written _num_ _num_ asm borland tasm tasm lga asm tlink lga asm code lga ncryption nick nassuphis code segment assume cs code ds code org _num_ start jmp begin gas particle assigment bit _num_ particle moving east bit _num_ particle moving west bit _num_ particle moving north bit _num_ particle moving south bit _num_ particle moving east bit _num_ particle moving west bit _num_ particle moving north bit _num_ particle moving south collisiong rules _num_ gas rules nibbles _num_ _num_ _num_ _num_ bytes _num_ _num_ _num_ _num_ _num_ _num_ _num_ _num_ _num_ _num_ _num_ _num_ _num_ _num_ _num_ _num_ _num_ reflection rules swap bits directions table implements particle collisions hpp lattice gas hpprule db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ rule implements velocity reversal needed run gas evolution reverse called wallrule particles hit wall head wallrule db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ db _num_ _num_ maxbyte equ _num_ lineno equ _num_ srcptr dw offset buffer _num_ desptr dw offset buffer _num_ savebuff db maxbyte lineno _num_ dup _num_ buffer _num_ db maxbyte lineno _num_ dup _num_ db _num_ dup _num_ buffer _num_ db maxbyte lineno _num_ dup _num_ db _num_ dup _num_ data db db db db test lattice gas based encryption db algorithm data encoded particles db digital gas time evolution simulated db cellular automaton type algorithm decryption db achieved running simulation reverse db thermodynamic argument ensures single db bit flipped decryption data db db gas evolve _num_ timesteps db run reverse evolution pressing db space flip bit run pressing _num_ db db cryptographic application key consist db number time steps time location db specific bit inversions db db db db db fill gas piece code initgas mov di cs srcptr mov si offset data mov cx lineno ig _num_ push di push cx mov cx maxbyte ig _num_ mov al cs si mov cs di al si di loop ig _num_ pop cx pop di add di maxbyte loop ig _num_ mov si cs srcptr mov di offset initgas mov cx maxbyte _num_ mov al _num_ lg _num_ mov byte ptr cs si al al si loop lg _num_ ret display gas molecules bouncing showgas push es push si push di push cx push bx mov ax _num_ _num_ mov es ax mov si cs srcptr mov di _num_ _num_ _num_ _num_ mov cx lineno _num_ add si maxbyte _num_ sg _num_ push cx push di mov cx maxbyte sg _num_ mov al cs si mov byte ptr es di al si add di _num_ dec cx jnz sg _num_ pop di pop cx add di _num_ loop sg _num_ pop bx pop cx pop di pop si pop es ret cs si sourse data cs di destination data scanonemiddleline byte special case warparound mov bl _num_ al assembled byte mov bh cs si maxbyte north line lower bh _num_ bits _num_ _num_ bl bh assembled byte mov bh cs si maxbyte south line higher bh _num_ bits _num_ _num_ bl bh place stuff al mov bh cs si maxbyte _num_ west byte left lower bh _num_ bits _num_ _num_ bl bh mov bh cs si _num_ east byte higher bh _num_ bits _num_ _num_ bl bh mov bh _num_ mov al byte ptr cs bx offset hpprule mov cs di al si di middle bytes handled loop mov cx maxbyte _num_ sol _num_ mov bl _num_ al assembled byte mov bh cs si maxbyte north line lower bh _num_ bits _num_ _num_ bl bh assembled byte mov bh cs si maxbyte south line higher bh _num_ bits _num_ _num_ bl bh place stuff al mov bh cs si _num_ west byte left lower bh _num_ bits _num_ _num_ bl bh mov bh cs si _num_ east byte higher bh _num_ bits _num_ _num_ bl bh mov bh _num_ mov al byte ptr cs bx offset hpprule mov cs di al si di loop sol _num_ byte special mov bl _num_ al assembled byte mov bh cs si maxbyte north line lower bh _num_ bits _num_ _num_ bl bh assembled byte mov bh cs si maxbyte south line higher bh _num_ bits _num_ _num_ bl bh place stuff al mov bh cs si _num_ west byte left lower bh _num_ bits _num_ _num_ bl bh mov bh cs si maxbyte _num_ east byte higher bh _num_ bits _num_ _num_ bl bh mov bh _num_ mov al byte ptr cs bx offset hpprule mov cs di al si di ret cs si sourse data cs di destination data scanfirstline byte special case warparound mov bl _num_ mov bh cs si maxbyte lineno _num_ bh _num_ bits _num_ _num_ bl bh assembled byte mov bh cs si maxbyte bh _num_ bits _num_ _num_ bl bh place stuff al mov bh cs si maxbyte _num_ west byte left lower bh _num_ bits _num_ _num_ bl bh mov bh cs si _num_ east byte higher bh _num_ bits _num_ _num_ bl bh mov bh _num_ mov al byte ptr cs bx offset hpprule mov cs di al si di middle bytes handled loop mov cx maxbyte _num_ sfl _num_ mov bl _num_ al assembled byte mov bh cs si maxbyte lineno _num_ bh _num_ bits _num_ _num_ bl bh assembled byte mov bh cs si maxbyte bh _num_ bits _num_ _num_ bl bh place stuff al mov bh cs si _num_ west byte left lower bh _num_ bits _num_ _num_ bl bh mov bh cs si _num_ east byte higher bh _num_ bits _num_ _num_ bl bh mov bh _num_ mov al byte ptr cs bx offset hpprule mov cs di al si di loop sfl _num_ byte special mov bl _num_ al assembled byte mov bh cs si maxbyte lineno _num_ bh _num_ bits _num_ _num_ bl bh assembled byte mov bh cs si maxbyte bh _num_ bits _num_ _num_ bl bh place stuff al mov bh cs si _num_ west byte left lower bh _num_ bits _num_ _num_ bl bh mov bh cs si maxbyte _num_ east byte higher bh _num_ bits _num_ _num_ bl bh mov bh _num_ mov al byte ptr cs bx offset hpprule mov cs di al ret cs si sourse data cs di destination data scanlastline byte special case warparound mov bl _num_ al assembled byte mov bh cs si maxbyte bh _num_ bits _num_ _num_ bl bh assembled byte mov bh cs si maxbyte lineno _num_ bh _num_ bits _num_ _num_ bl bh place stuff al mov bh cs si maxbyte _num_ west byte left lower bh _num_ bits _num_ _num_ bl bh mov bh cs si _num_ east byte higher bh _num_ bits _num_ _num_ bl bh mov bh _num_ mov al byte ptr cs bx offset hpprule mov cs di al si di middle bytes handled loop mov cx maxbyte _num_ sll _num_ mov bl _num_ al assembled byte mov bh cs si maxbyte bh _num_ bits _num_ _num_ bl bh assembled byte mov bh cs si maxbyte lineno _num_ bh _num_ bits _num_ _num_ bl bh place stuff al mov bh cs si _num_ west byte left lower bh _num_ bits _num_ _num_ bl bh mov bh cs si _num_ east byte higher bh _num_ bits _num_ _num_ bl bh mov bh _num_ mov al byte ptr cs bx offset hpprule mov cs di al si di loop sll _num_ byte special mov bl _num_ al assembled byte mov bh cs si maxbyte bh _num_ bits _num_ _num_ bl bh assembled byte mov bh cs si maxbyte lineno _num_ bh _num_ bits _num_ _num_ bl bh place stuff al mov bh cs si _num_ west byte left lower bh _num_ bits _num_ _num_ bl bh mov bh cs si maxbyte _num_ east byte higher bh _num_ bits _num_ _num_ bl bh mov bh _num_ mov al byte ptr cs bx offset hpprule mov cs di al si di ret invert velocities gas invertall push bx push cx push si mov si cs srcptr mov bx _num_ mov cx lineno ia _num_ push cx mov cx maxbyte ia _num_ mov bl cs si mov al byte ptr cs bx offset wallrule mov cs si al si loop ia _num_ pop cx loop ia _num_ pop si pop cx pop bx ret iterateonce mov si cs srcptr mov di cs desptr mov cs srcptr di mov cs desptr si push si push di call scanfirstline pop di pop si add si maxbyte add di maxbyte mov cx lineno _num_ dont scan _num_ push si push di push cx call scanonemiddleline pop cx pop di pop si add si maxbyte add di maxbyte loop _num_ push si push di call scanlastline pop si pop di _num_ ret iterate hpp rule cx times iterate push cx call iterateonce pop cx call showgas loop iterate ret iterate hpp rule cx times iterateuntil mov si _num_ mov cx offset iu _num_ offset iu _num_ iu _num_ mov al byte ptr cs si offset iu _num_ xor byte ptr cs si offset iu _num_ al si loop iu _num_ iu _num_ call iterateonce call showgas mov si cs srcptr mov cx maxbyte _num_ mov bx _num_ mov ah _num_ mov al _num_ iu _num_ mov bl byte ptr cs si mov dl byte ptr cs bx wallrule ah xor dl ah al dl si loop iu _num_ mov si _num_ mov cx offset iu _num_ offset iu _num_ iu _num_ mov ah byte ptr cs si offset iu _num_ ah al xor byte ptr cs si offset iu _num_ ah si loop iu _num_ jmp iu _num_ iu _num_ mov ax offset iu _num_ push ax ret db _num_ dup _num_ iu _num_ push ax push bx push cx push dx push ds mov ah _num_ mov dx cs msgptr int _num_ pop ds pop dx pop cx pop bx pop ax ret db _num_ dup _num_ msgptr dw offset msg msg db message printed _num_ _num_ db code decrypted data lattice _num_ _num_ db applied decoding routine _num_ _num_ db time step _num_ _num_ db decoding function left code unchanged _num_ _num_ db gas evolution completelly _num_ _num_ db reversed thermalization _num_ _num_ times equ _num_ _num_ repetitions equilibrate gas begin mov ax _num_ mov bh _num_ mov dh _num_ mov dl _num_ mov cx _num_ int _num_ mov ah _num_ mov bh _num_ mov dh _num_ mov dl _num_ int _num_ call initgas call showgas mov ah _num_ int _num_ push cx mov cx times call iterate call invertall call showgas mov ah _num_ int _num_ cmp al _num_ jne begin _num_ mov si cs srcptr xor byte ptr cs si _num_ begin _num_ mov cx times call iterateuntil call invertall call showgas mov ax _num_ _num_ int _num_
