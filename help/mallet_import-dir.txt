bin/mallet import-dir --help

A tool for creating instance lists of FeatureVectors or FeatureSequences from text documents.
# SKIP THESE
--help TRUE|FALSE
  Print this command line option usage information.  Give argument of TRUE for longer documentation
  Default is false
--prefix-code 'JAVA CODE'
  Java code you want run before any other interpreted code.  Note that the text is interpreted without modification, so unlike some other Java code options, you need to include any necessary 'new's when creating objects.
  Default is null
  

# These are good to have
###############################################
--config FILE
  Read command option values from a file
  Default is null
--input DIR...
  The directories containing text files to be classified, one directory per class
  Default is (null)
--output FILE
  Write the instance list to this file; Using - indicates stdout.
  Default is text.vectors
  
  
# probably don't want these bells and whistles
--use-pipe-from FILE
  Use the pipe and alphabets from a previously created vectors file. Allows the creation, for example, of a test set of vectors that are compatible with a previously created set of training vectors
  Default is text.vectors
  
  
# We can handle these ourselves
--preserve-case [TRUE|FALSE]
  If true, do not force all strings to lowercase.
  Default is false
--replacement-files FILE [FILE ...]
  files containing string replacements, one per line:
    'A B [tab] C' replaces A B with C,
    'A B' replaces A B with A_B
  Default is (null)
--deletion-files FILE [FILE ...]
  files containing strings to delete after replacements but before tokenization (ie multiword stop terms)
  Default is (null)
--remove-stopwords [TRUE|FALSE]
  If true, remove a default list of common English "stop words" from the text.
  Default is false
--stoplist-file FILE
  Instead of the default list, read stop words from a file, one per line. Implies --remove-stopwords
  Default is null
--extra-stopwords FILE
  Read whitespace-separated words from this file, and add them to either
   the default English stoplist or the list specified by --stoplist-file.
  Default is null
--stop-pattern-file FILE
  Read regular expressions from a file, one per line. Tokens matching these regexps will be removed.
  Default is null
--skip-header [TRUE|FALSE]
  If true, in each document, remove text occurring before a blank line.  This is useful for removing email or UseNet headers
  Default is false
--skip-html [TRUE|FALSE]
  If true, remove text occurring inside <...>, as in HTML or SGML.
  Default is false
--binary-features [TRUE|FALSE]
  If true, features will be binary.
  Default is false
--gram-sizes INTEGER,[INTEGER,...]
  Include among the features all n-grams of sizes specified.  For example, to get all unigrams and bigrams, use --gram-sizes 1,2.  This option occurs after the removal of stop words, if removed.
  Default is 1
--keep-sequence [TRUE|FALSE]
  If true, final data will be a FeatureSequence rather than a FeatureVector.
  Default is false
--keep-sequence-bigrams [TRUE|FALSE]
  If true, final data will be a FeatureSequenceWithBigrams rather than a FeatureVector.
  Default is false
  
  
# Don't need these bells and whistles
--save-text-in-source [TRUE|FALSE]

  If true, save original text of document in source.
  Default is false
--string-pipe Pipe constructor
  Java code for the constructor of a Pipe to be run as soon as input becomes a CharSequence
  Default is null
--token-pipe Pipe constructor
  Java code for the constructor of a Pipe to be run as soon as input becomes a TokenSequence
  Default is null
--fv-pipe Pipe constructor
  Java code for the constructor of a Pipe to be run as soon as input becomes a FeatureVector
  Default is null
  
  
# These could be useful
##################################################
--encoding STRING
  Character encoding for input file
  Default is UTF-8
--token-regex REGEX
  Regular expression used for tokenization.
   Example: "[\p{L}\p{N}_]+|[\p{P}]+" (unicode letters, numbers and underscore OR all punctuation) 
  Default is \p{L}[\p{L}\p{P}]+\p{L}
  
# Debug option
--print-output [TRUE|FALSE]
  If true, print a representation of the processed data
   to standard output. This option is intended for debugging.
  Default is false

